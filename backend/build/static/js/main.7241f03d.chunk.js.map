{"version":3,"sources":["components/auth.js","socket.js","pages/success-login.js","App.js","reportWebVitals.js","index.js"],"names":["username","password","this","authenticated","callbk","console","log","io","SuccessLogin","props","useState","board","setBoard","players","setPlayers","socket","on","snakeSquare","backgroundColor","color","margin","padding","width","height","appleSquare","emptySqure","className","onKeyDown","e","event","keyCode","emit","style","position","tabIndex","border","borderCollapse","map","row","i","col","j","onClick","Object","entries","value","id","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7241f03d.chunk.js","sourcesContent":["class Auth{\n    constructor(username, password){\n        this.authenticated = false;\n        this.username = username;\n        this.password = password;\n    }\n\n    login(callbk){\n        console.log(this.username)\n        this.authenticated = true;\n        callbk();\n    }\n\n    logout(callbk){\n        this.authenticated = false;\n        callbk();\n    }\n\n    isAuthenticated(){\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();\n","import io from \"socket.io-client\";\n\nconst ENDPOINT = 'http://localhost:4000';\nexport default io(ENDPOINT);","import React, { useEffect, useState } from \"react\";\nimport auth from './../components/auth';\n// import changeDirection from './../../../backend/game';\nimport socket from \"../socket\";\n\nexport const SuccessLogin = (props) => {\n    const [board, setBoard] = useState(null);\n    const [players, setPlayers] = useState({})\n    const startGame = () => { \n        socket.emit(\"initPlayer\");\n        \n        socket.on(\"initializedPlayer\", (board) => {\n            setBoard(board);\n        }); \n    };\n    \n    socket.on(\"playerMoved\", (board) => { \n        console.log(\"player moved\")\n    });\n\n    socket.on(\"updatedStateBoard\", (board) => { \n        setBoard(board);\n    });\n\n    socket.on(\"updatePlayers\", (players) => { \n        setPlayers(players);\n        console.log(players)\n    });\n    \n    const keyHandler = (event) => {\n        // changing the state to the name of the key\n      // which is pressed\n    //   setKey(event.keyCode);\n      if (event.keyCode === 37){\n        socket.emit(\"moveSnake\", \"left\");\n      } else if (event.keyCode === 38) {\n        socket.emit(\"moveSnake\", \"up\");\n      } else if (event.keyCode === 39){\n        socket.emit(\"moveSnake\", \"right\");\n      } else if (event.keyCode === 40){\n        socket.emit(\"moveSnake\", \"down\");\n      }\n    };\n\n    let snakeSquare = {\n        backgroundColor: \"darkblue\",\n        color: \"darkblue\",\n        margin: 0,\n        padding: 0,\n        width: '20px',\n        height:'20px',\n    };\n\n    let appleSquare = {\n        backgroundColor: \"red\",\n        color: \"red\",\n        margin: 0,\n        padding: 0,\n        width: '20px',\n        height:'20px',\n    }\n\n    let emptySqure = {\n        // backgroundColor: \"lightgreen\",\n        color: \"lightgreen\",\n        margin: 0,\n        padding: 0,\n        width: '20px',\n        height:'20px',\n    }\n\n    let leaderBoard = {\n        backgroundColor:'green',\n        width: '200px',\n        height:'200px',\n    }\n\n    return(\n        <section className='container' onKeyDown={(e) => keyHandler(e)} style={{position:\"absolute\"}} tabIndex=\"0\">\n            <div> {\"Free For All\"} </div>\n            <div> {\"Press Start Game and control your snake using arrow keys\"} </div>\n            <div> \n            { board !== null ? \n                <table style={{ \n                    border: \"2px solid black\",\n                    width: '400px',\n                    backgroundColor: \"lightgreen\",\n                    borderCollapse: \"collapse\",\n                    // border: \"0\"\n                 }}\n                >\n                    {board.map((row, i) => (\n                        <tr key={i} style={{borderCollapse: \"collapse\", border: 0}}>\n                        {row.map((col, j) => (\n                            // <span>{col}</span>\n                            <td>\n                                { col === -1\n                                    ? <td style={emptySqure}>{'●'}</td>\n                                    : ( col === 'A'\n                                        ? <td style={appleSquare}>{'●'}</td> /* apple */\n                                        : <td style={snakeSquare}>{'●'}</td> /* snake */\n                                    )\n                                }\n                                {/* <span>\n                                {col === -1\n                                    ? <span style={{padding:'5px'}}>{' '}</span>\n                                    : <span>{'U'}</span>\n                                }\n                                </span> */}\n                            </td>\n                        ))}\n                        </tr>\n                    ))} \n                </table> :\n                <div> </div>\n            }\n            </div>\n      \n            <button onClick={startGame}>Start Game</button>\n\n            <section style={leaderBoard}>\n                <div>Leader Board</div>\n                <table>\n                {\n                    Object.entries(players)\n                    .map(([key, value]) => \n                        <tr>\n                            {`Snake ${value[1].id} has ${value[2]} points \\n`}\n                        </tr>\n                    )\n                }\n                </table>\n            </section>\n        </section>\n    );\n    \n}","import React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { LandingPage } from './pages/landing-page';\nimport \"./App.css\";\nimport { SuccessLogin } from './pages/success-login';\n// import { Game } from './pages/game';\n// import gameCanvas from './pages/gameCanvas';\nimport { ProtectedRoute } from './components/protected-route';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        {/* <Route exact path=\"/\" component={LandingPage} /> */}\n        <Route exact path=\"/\" component={SuccessLogin} />\n        {/* <Route exact path=\"/game\" component={Game} /> */}\n        <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n      </Switch>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}